D(studentIdnr, studentName, login, branchName, programName, programAbbreviation, courseCode, courseName, credits, departmentName, departmentAbbreviation, capacity, classification, grade, position)

1NF:
studentIdnr -> studentName, login, programName, branchName

login -> studentIdnr

programName -> programAbbreviation

departmentName -> departmentAbbreviation

departmentAbbreviation -> departmentName

courseCode -> courseName, credits, departmentName, capacity

courseCode, studentIdnr -> position, grade

position, courseCode -> studentIdnr

BCNF:
Our D breaks the rule of LHS always being a Superkey.
Therefore we break it down into relationships.
R1(studentIdnr, studentName, login, programName, branchName)
studentIdnr -> studentName, login, programName, branchName

R2(programName, programAbbreviation)
programName -> programAbbreviation

R3(departmentName, departmentAbbreviation)
departmentName -> departmentAbbreviation
departmentAbbreviation -> departmentName

R4(courseCode, courseName, credits, departmentName, capacity)
courseCode -> courseName, credits, departmentName, capacity

R5(courseCode, studentIdnr, position, grade)
courseCode, studentIdnr -> position, grade

R6(studentIdnr, courseCode, classification)

4NF:
We find the MVDs:
courseCode ->> classification
courseCode ->> departmentName
programName ->> studentIdnr
branchName ->> studentIdnr

This allows us to break R4 and R6 into smaller relationships
Student(studentIdnr, studentName, login)
studentIdnr -> studentName
studentIdnr -> login

StudentProgram(studentIdnr, programName)
studentIdnr -> programName

StudentBranch(studentIdnr, branchName)
studentIdnr -> branchName

Program(programName, programAbbreviation)
programName -> programAbbreviation

Department(departmentName, departmentAbbreviation)
departmentName -> departmentAbbreviation
departmentAbbreviation -> departmentName

Course(courseCode, courseName, credits, capacity)
courseCode -> courseName
courseCode -> credits
courseCode -> capacity

DepartmentCourses(courseCode, departmentName)

StudentCourseInformation(courseCode, studentIdnr, position, grade)
courseCode, studentIdnr -> position
courseCode, studentIdnr -> grade

Registered(studentIdnr, courseCode)

CourseClassifications(courseCode, classification)
